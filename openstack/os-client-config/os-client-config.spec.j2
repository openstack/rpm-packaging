%global sname os-client-config
%bcond_with test
%bcond_with docs
Name:           {{ py2name('os-client-config') }}
Version:        1.28.0
Release:        0
Summary:        OpenStack Client Configuration Library
License:        {{ license('Apache-2.0') }}
Group:          Development/Languages/Python
Url:            https://launchpad.net/%{sname}
Source0:        https://pypi.io/packages/source/o/%{sname}/%{sname}-%{version}.tar.gz
BuildRequires:  openstack-macros
BuildRequires:  python-devel
BuildRequires:  {{ py2pkg('pbr') }}
BuildRequires:  {{ py2pkg('setuptools') }}
Requires:       {{ py2pkg('PyYAML') }}
Requires:       {{ py2pkg('appdirs') }}
Requires:       {{ py2pkg('keystoneauth1') }}
Requires:       {{ py2pkg('requestsexceptions') }}
BuildArch:      noarch
%if %{with test}
BuildRequires:  {{ py2pkg('extras') }}
BuildRequires:  {{ py2pkg('fixtures') }}
BuildRequires:  {{ py2pkg('python-glanceclient') }}
BuildRequires:  {{ py2pkg('jsonschema') }}
BuildRequires:  {{ py2pkg('python-keystoneclient') }}
BuildRequires:  {{ py2pkg('mock') }}
BuildRequires:  {{ py2pkg('oslotest') }}
BuildRequires:  {{ py2pkg('python-subunit') }}
BuildRequires:  {{ py2pkg('testrepository') }}
BuildRequires:  {{ py2pkg('testscenarios') }}
BuildRequires:  {{ py2pkg('testtools') }}
%endif

%description
os-client-config is a library for collecting client configuration for
using an OpenStack cloud in a consistent and comprehensive manner.
It will find cloud config for as few as 1 cloud and as many as you want
to put in a config file. It will read environment variables and config
files, and it also contains some vendor specific default values so that
you don't have to know extra info to use OpenStack.

%if %{with docs}
%package doc
Summary:        Documentation for the OpenStack client configuration library
Group:          Documentation/HTML
BuildRequires:  {{ py2pkg('Sphinx') }}
BuildRequires:  {{ py2pkg('oslosphinx') }}
BuildRequires:  {{ py2pkg('reno') }}

%description doc
Documentation for the os-client-config library.
%endif

%prep
%autosetup -n %{sname}-%{version}
%py_req_cleanup

%build
%{py2_build}
%if %{with docs}
# generate html docs
%{__python2} setup.py build_sphinx
# remove the sphinx-build leftovers
rm -rf html/.{doctrees,buildinfo}
%endif

%install
%{py2_install}

%if %{with test}
%check
export PYTHONPATH="%{python2_sitearch}:%{python2_sitelib}:%{buildroot}%{python2_sitelib}"
testr init && testr run
%endif

%files
%license LICENSE
%doc README.rst
%{python2_sitelib}/os_client_config
%{python2_sitelib}/*.egg-info

%if %{with docs}
%files doc
%doc doc/build/html
%license LICENSE
%endif

%changelog
